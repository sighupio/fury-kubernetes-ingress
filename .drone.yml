# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.
name: license
kind: pipeline
type: docker
clone:
  depth: 1
steps:
  - name: check
    image: docker.io/library/golang:1.21
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.1.1
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .

---
name: policeman
kind: pipeline
type: docker
depends_on:
  - license
clone:
  depth: 1
platform:
  os: linux
  arch: amd64
steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
      # Disable linter on helper files in the test folder
      FILTER_REGEX_EXCLUDE: (katalog/tests/helper|\.github)
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:2.24.17_1.1.0_3.12.0_1.32.2_5.6.0_4.33.3
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/cert-manager > cert-manager.yml
      - kustomize build katalog/dual-nginx > dual-nginx.yml
      - kustomize build katalog/forecastle > forecastle.yml
      - kustomize build katalog/nginx > nginx.yml
  - &check-deprecated-apis
    name: check-deprecated-apis-cert-manager
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect $${KUBERNETES_MANIFESTS} --ignore-deprecations --target-versions=k8s=v1.32.0
    environment:
      KUBERNETES_MANIFESTS: cert-manager.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-dual-nginx
    environment:
      KUBERNETES_MANIFESTS: dual-nginx.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-forecastle
    environment:
      KUBERNETES_MANIFESTS: forecastle.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-nginx
    environment:
      KUBERNETES_MANIFESTS: nginx.yml

---
name: E2E Tests on kind clusters version 1.29.0
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - policeman
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
steps:
  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/kind/generate-template.sh 1.29.0

  - name: Create Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.29.1_5.6.0 # vesions: kind_kubectl_kustomize
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
    commands:
      - kind create cluster --config ./config-$${CLUSTER_NAME}.yaml
      - kind get kubeconfig --name $${CLUSTER_NAME} > ./kubeconfig-$${CLUSTER_NAME}
    depends_on:
      - Generate Kind Config file

  - name: End-to-End Tests
    image: quay.io/sighup/e2e-testing:2.24.17_1.1.0_3.12.0_1.29.1_5.6.0_4.33.3 # versions: awscli_bats_helm_kubectl_kustomize_yq
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: ./kubeconfig-${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
    depends_on:
      - Create Kind Cluster
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - until kubectl get serviceaccount default > /dev/null 2>&1; do echo "waiting for control-plane" && sleep 1; done
      - bats -t ./katalog/tests/tests.bats

  - name: Destroy Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.29.1_5.6.0 # versions: kind_kubectl_kustomize
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
    commands:
      - "kind delete cluster --name $${CLUSTER_NAME} || true"
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: E2E Tests on kind clusters version 1.30.4
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - policeman
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
steps:
  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/kind/generate-template.sh 1.30.4

  - name: Create Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.30.5_5.6.0 # versions: kind_kubectl_kustomize
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
    commands:
      - kind create cluster --config ./config-$${CLUSTER_NAME}.yaml
      - kind get kubeconfig --name $${CLUSTER_NAME} > ./kubeconfig-$${CLUSTER_NAME}
    depends_on:
      - Generate Kind Config file

  - name: End-to-End Tests
    image: quay.io/sighup/e2e-testing:2.24.17_1.1.0_3.12.0_1.30.5_5.6.0_4.33.3 # versions: awscli_bats_helm_kubectl_kustomize_yq
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: ./kubeconfig-${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
    depends_on:
      - Create Kind Cluster
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - until kubectl get serviceaccount default > /dev/null 2>&1; do echo "waiting for control-plane" && sleep 1; done
      - bats -t ./katalog/tests/tests.bats

  - name: Destroy Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.30.5_5.6.0 # versions: kind_kubectl_kustomize
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
    commands:
      - "kind delete cluster --name $${CLUSTER_NAME} || true"
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: E2E Tests on kind clusters version 1.31.1
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - policeman
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
steps:
  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/kind/generate-template.sh 1.31.1

  - name: Create Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.31.1_5.6.0 # versions: kind_kubectl_kustomize
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.31.1
    commands:
      - kind create cluster --config ./config-$${CLUSTER_NAME}.yaml
      - kind get kubeconfig --name $${CLUSTER_NAME} > ./kubeconfig-$${CLUSTER_NAME}
    depends_on:
      - Generate Kind Config file

  - name: End-to-End Tests
    image: quay.io/sighup/e2e-testing:2.24.17_1.1.0_3.12.0_1.31.1_5.6.0_4.33.3 # versions: awscli_bats_helm_kubectl_kustomize_yq
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: ./kubeconfig-${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.31.1
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.31.1
    depends_on:
      - Create Kind Cluster
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - until kubectl get serviceaccount default > /dev/null 2>&1; do echo "waiting for control-plane" && sleep 1; done
      - bats -t ./katalog/tests/tests.bats

  - name: Destroy Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.31.1_5.6.0 # versions: kind_kubectl_kustomize
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.31.1
    commands:
      - "kind delete cluster --name $${CLUSTER_NAME} || true"
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: E2E Tests on kind clusters version 1.32.2
kind: pipeline
type: docker
platform:
  os: linux
  arch: amd64
depends_on:
  - policeman
clone:
  depth: 1
trigger:
  ref:
    include:
      - refs/tags/**
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
steps:
  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/kind/generate-template.sh 1.32.2

  - name: Create Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.27.0_1.32.2_5.6.0 # versions: kind_kubectl_kustomize
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.32.2
    commands:
      - kind create cluster --config ./config-$${CLUSTER_NAME}.yaml
      - kind get kubeconfig --name $${CLUSTER_NAME} > ./kubeconfig-$${CLUSTER_NAME}
    depends_on:
      - Generate Kind Config file

  - name: End-to-End Tests
    image: quay.io/sighup/e2e-testing:2.24.17_1.1.0_3.12.0_1.32.2_5.6.0_4.33.3 # versions: awscli_bats_helm_kubectl_kustomize_yq
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: ./kubeconfig-${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.32.2
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.32.2
    depends_on:
      - Create Kind Cluster
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - until kubectl get serviceaccount default > /dev/null 2>&1; do echo "waiting for control-plane" && sleep 1; done
      - bats -t ./katalog/tests/tests.bats

  - name: Destroy Kind Cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.27.0_1.32.2_5.6.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.32.2
    commands:
      - "kind delete cluster --name $${CLUSTER_NAME} || true"
    depends_on:
      - End-to-End Tests
    when:
      status:
        - success
        - failure

---
name: release
kind: pipeline
type: docker
clone:
  depth: 1
depends_on:
  - E2E Tests on kind clusters version 1.29.0
  - E2E Tests on kind clusters version 1.30.4
  - E2E Tests on kind clusters version 1.31.1
  - E2E Tests on kind clusters version 1.32.2
platform:
  os: linux
  arch: amd64
trigger:
  ref:
    include:
      - refs/tags/**
steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on:
      - clone
    commands:
      - "tar -zcvf fury-kubernetes-ingress-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md"
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on:
      - clone
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on: [prepare-tar-gz, prepare-release-notes]
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - "fury-kubernetes-ingress-${DRONE_TAG}.tar.gz"
      prerelease: true
      overwrite: true
      title: Preview ${DRONE_TAG}
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - "fury-kubernetes-ingress-${DRONE_TAG}.tar.gz"
      prerelease: false
      overwrite: true
      title: Release ${DRONE_TAG}
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**

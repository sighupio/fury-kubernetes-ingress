# Copyright (c) 2024 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

fullNameOverride: ingress-nginx

controller:
  name: "controller"
  kind: DaemonSet
  image:
    registry: registry.sighup.io
    image: fury/ingress-nginx/controller
    pullPolicy: Always
    digest: ""
  containerPort:
    http: 8080
    https: 8443
  extraArgs:
    http-port: 8080
    https-port: 8443
  allowSnippetAnnotations: true
  electionID: ingress-controller-leader
  publishService:
    pathOverride: $(POD_NAMESPACE)/ingress-nginx
  service:
    type: NodePort
    nodePorts:
      http: 31080
      https: 31443
    externalTrafficPolicy: Local
  admissionWebhooks:
    port: 9443
    service:
      servicePort: 9443
    patch:
      enabled: false
    certManager:
      enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        k8s-app: ingress-nginx
      scrapeInterval: 10s
      jobLabel: k8s-app
    prometheusRule:
      enabled: true
      additionalLabels:
        prometheus: k8s
        role: alert-rules
      rules:
      - alert: NginxIngressDown
        annotations:
          description: 'NGINX Ingress Controller has disapperead from Prometheus
            target discovery.'
          doc: "This alert fires if Promethes target discovery was not able to
            reach ingress-nginx-controller-metrics in the last 15 minutes."
        expr: |
          absent(up{job="ingress-nginx-controller-metrics"} == 1)
        for: 15m
        labels:
          severity: critical
      - alert: NginxIngressFailureRate
        annotations:
          description: 'NGINX Ingress {{ $labels.ingress }} failure rate is {{ printf
            "%.2f" $value }}%.'
          doc: "This alert fires if the failure rate (the rate of 5xx reponses)
            measured on a time window of 2 minutes was higher than 10% in the last
            10 minutes."
        expr: |
          (sum by (ingress) (rate(nginx_ingress_controller_requests{ingress!="", status=~"5[0-9][0-9]"}[2m]))
            /
          sum by (ingress) (rate(nginx_ingress_controller_requests{ingress!=""}[2m]))) * 100 > 10
        for: 10m
        labels:
          severity: critical
      - alert: NginxIngressFailedReload
        annotations:
          description: "Reloading NGINX Ingress' configuration has failed for {{
            $labels.namespace }}/{{ $labels.pod }}."
          doc: "This alert fires if the ingress' configuration reload failed in
            the last 10 minutes."
        expr: |
          nginx_ingress_controller_config_last_reload_successful{job="ingress-nginx-controller-metrics"} == 0
        for: 10m
        labels:
          severity: warning
      - alert: NginxIngressLatencyTooHigh
        annotations:
          description: 'NGINX Ingress {{ $labels.ingress }} 50th percentile response
            latency too high, current value is {{ $value }}s.'
          doc: "This alert fires if the ingress 99th percentile latency was more
            than 5 seconds in the last 10 minutes."
        expr: |
          (histogram_quantile(0.50, sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{ingress!=""}[2m])) by (le, ingress))) > 5
        for: 10m
        labels:
          severity: warning
      - alert: NginxIngressLatencyTooHigh
        annotations:
          description: 'NGINX Ingress {{ $labels.ingress }} 99th percentile response
            latency too high, current value is {{ $value }}s.'
          doc: "This alert fires if the ingress 99th percentile latency was more
            than 10 seconds in the last 10 minutes."
        expr: |
          (histogram_quantile(0.99, sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{ingress!=""}[2m])) by (le, ingress))) > 10
        for: 10m
        labels:
          severity: critical
      - alert: NginxIngressCertificateExpiration
        annotations:
          description: 'NGINX Ingress certificate for host {{ $labels.host }} is
            expiring in less than 7 days.'
          doc: "This alert fires if the certificate for a given host is expiring
            in less than 7 days."
        expr: |
          (avg(nginx_ingress_controller_ssl_expire_time_seconds{job="ingress-nginx-controller-metrics"}) by (host) - time()) < 604800
        labels:
          severity: warning
      - alert: NginxIngressCertificateExpiration
        annotations:
          description: 'NGINX Ingress certificate for host {{ $labels.host }} is
            expiring in less than 1 days.'
          doc: "This alert fires if the certificate for a given host is expiring
            in less than 1 days."
        expr: |
          (avg(nginx_ingress_controller_ssl_expire_time_seconds{job="ingress-nginx-controller-metrics"}) by (host) - time()) < 86400
        labels:
          severity: critical        
  config:
    enable-access-log-for-default-backend: true
    http-redirect-code: 301
    proxy-body-size: 10m
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  podSecurityContext:
    fsGroup: 101
  ingressClassResource:
    default: true
